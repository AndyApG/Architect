// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<RuleInput /> can prepopulate a value 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <RuleInput
    className={null}
    onChange={[Function]}
    type="text"
    value="foo"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": null,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="rule-input__spacer"
>
          foo
</div>,
        <input
          className="rule-input__text"
          onChange={[Function]}
          type="text"
          value="foo"
/>,
      ],
      "className": "rule-input",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": "foo",
          "className": "rule-input__spacer",
        },
        "ref": null,
        "rendered": "foo",
        "type": "div",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "className": "rule-input__text",
          "onChange": [Function],
          "type": "text",
          "value": "foo",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
    ],
    "type": "label",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": null,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="rule-input__spacer"
>
            foo
</div>,
          <input
            className="rule-input__text"
            onChange={[Function]}
            type="text"
            value="foo"
/>,
        ],
        "className": "rule-input",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": "foo",
            "className": "rule-input__spacer",
          },
          "ref": null,
          "rendered": "foo",
          "type": "div",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "className": "rule-input__text",
            "onChange": [Function],
            "type": "text",
            "value": "foo",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
      ],
      "type": "label",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`<RuleInput /> can render 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <RuleInput
    className={null}
    onChange={[Function]}
    type="text"
    value=""
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": null,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="rule-input__spacer"
/>,
        <input
          className="rule-input__text"
          onChange={[Function]}
          type="text"
          value=""
/>,
      ],
      "className": "rule-input",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": "",
          "className": "rule-input__spacer",
        },
        "ref": null,
        "rendered": "",
        "type": "div",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "className": "rule-input__text",
          "onChange": [Function],
          "type": "text",
          "value": "",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
    ],
    "type": "label",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": null,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="rule-input__spacer"
/>,
          <input
            className="rule-input__text"
            onChange={[Function]}
            type="text"
            value=""
/>,
        ],
        "className": "rule-input",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": "",
            "className": "rule-input__spacer",
          },
          "ref": null,
          "rendered": "",
          "type": "div",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "className": "rule-input__text",
            "onChange": [Function],
            "type": "text",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
      ],
      "type": "label",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`<RuleInput /> can render as number 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <RuleInput
    className={null}
    onChange={[Function]}
    type="number"
    value=""
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": null,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="rule-input__spacer"
/>,
        <input
          className="rule-input__text"
          onChange={[Function]}
          type="number"
          value=""
/>,
      ],
      "className": "rule-input",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": "",
          "className": "rule-input__spacer",
        },
        "ref": null,
        "rendered": "",
        "type": "div",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "className": "rule-input__text",
          "onChange": [Function],
          "type": "number",
          "value": "",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
    ],
    "type": "label",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": null,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="rule-input__spacer"
/>,
          <input
            className="rule-input__text"
            onChange={[Function]}
            type="number"
            value=""
/>,
        ],
        "className": "rule-input",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": "",
            "className": "rule-input__spacer",
          },
          "ref": null,
          "rendered": "",
          "type": "div",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "className": "rule-input__text",
            "onChange": [Function],
            "type": "number",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
      ],
      "type": "label",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

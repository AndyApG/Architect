// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<TimelineAddNew /> can render 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TimelineAddNew
    onInsertStage={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": null,
    "nodeType": "host",
    "props": Object {
      "children": <ZoomElement
        colors={
                Array [
                        "#2d2955",
                        "#3a3a75",
                      ]
        }
>
        <div
                className="timeline-add-new__button"
                onClick={[Function]}
                role="button"
                style={
                        Object {
                                "display": "inline-block",
                              }
                }
                tabIndex="0"
        >
                <div
                        className="timeline-add-new__button-label"
                >
                        Add new stage here
                </div>
                <Icon
                        className="timeline-add-new__button-icon"
                        color=""
                        name="add-a-screen"
                        style={Object {}}
                />
        </div>
</ZoomElement>,
      "className": "timeline-add-new",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": null,
      "nodeType": "class",
      "props": Object {
        "children": <div
          className="timeline-add-new__button"
          onClick={[Function]}
          role="button"
          style={
                    Object {
                              "display": "inline-block",
                            }
          }
          tabIndex="0"
>
          <div
                    className="timeline-add-new__button-label"
          >
                    Add new stage here
          </div>
          <Icon
                    className="timeline-add-new__button-icon"
                    color=""
                    name="add-a-screen"
                    style={Object {}}
          />
</div>,
        "colors": Array [
          "#2d2955",
          "#3a3a75",
        ],
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="timeline-add-new__button-label"
>
              Add new stage here
</div>,
            <Icon
              className="timeline-add-new__button-icon"
              color=""
              name="add-a-screen"
              style={Object {}}
/>,
          ],
          "className": "timeline-add-new__button",
          "onClick": [Function],
          "role": "button",
          "style": Object {
            "display": "inline-block",
          },
          "tabIndex": "0",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": "Add new stage here",
              "className": "timeline-add-new__button-label",
            },
            "ref": null,
            "rendered": "Add new stage here",
            "type": "div",
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "class",
            "props": Object {
              "className": "timeline-add-new__button-icon",
              "color": "",
              "name": "add-a-screen",
              "style": Object {},
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": null,
      "nodeType": "host",
      "props": Object {
        "children": <ZoomElement
          colors={
                    Array [
                              "#2d2955",
                              "#3a3a75",
                            ]
          }
>
          <div
                    className="timeline-add-new__button"
                    onClick={[Function]}
                    role="button"
                    style={
                              Object {
                                        "display": "inline-block",
                                      }
                    }
                    tabIndex="0"
          >
                    <div
                              className="timeline-add-new__button-label"
                    >
                              Add new stage here
                    </div>
                    <Icon
                              className="timeline-add-new__button-icon"
                              color=""
                              name="add-a-screen"
                              style={Object {}}
                    />
          </div>
</ZoomElement>,
        "className": "timeline-add-new",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": null,
        "nodeType": "class",
        "props": Object {
          "children": <div
            className="timeline-add-new__button"
            onClick={[Function]}
            role="button"
            style={
                        Object {
                                    "display": "inline-block",
                                  }
            }
            tabIndex="0"
>
            <div
                        className="timeline-add-new__button-label"
            >
                        Add new stage here
            </div>
            <Icon
                        className="timeline-add-new__button-icon"
                        color=""
                        name="add-a-screen"
                        style={Object {}}
            />
</div>,
          "colors": Array [
            "#2d2955",
            "#3a3a75",
          ],
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="timeline-add-new__button-label"
>
                Add new stage here
</div>,
              <Icon
                className="timeline-add-new__button-icon"
                color=""
                name="add-a-screen"
                style={Object {}}
/>,
            ],
            "className": "timeline-add-new__button",
            "onClick": [Function],
            "role": "button",
            "style": Object {
              "display": "inline-block",
            },
            "tabIndex": "0",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": "Add new stage here",
                "className": "timeline-add-new__button-label",
              },
              "ref": null,
              "rendered": "Add new stage here",
              "type": "div",
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "class",
              "props": Object {
                "className": "timeline-add-new__button-icon",
                "color": "",
                "name": "add-a-screen",
                "style": Object {},
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

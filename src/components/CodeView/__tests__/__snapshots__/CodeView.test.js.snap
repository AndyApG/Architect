// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<CodeView /> can render 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CodeView
    code={Object {}}
    show={false}
    toggleCodeView={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "animate": "hide",
      "children": Array [
        <div
          className="code-view__content"
        >
          <pre>
            <code>
              {}
            </code>
          </pre>
        </div>,
        <div
          className="code-view__controls"
          onClick={[Function]}
        >
          Close code view
        </div>,
      ],
      "className": "code-view",
      "initial": "hide",
      "transition": Object {
        "duration": NaN,
        "ease": "easeInOut",
      },
      "variants": Object {
        "hide": Object {
          "opacity": 0,
          "translateY": "-100%",
        },
        "show": Object {
          "opacity": 1,
          "translateY": "0%",
        },
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <pre>
            <code>
              {}
            </code>
          </pre>,
          "className": "code-view__content",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <code>
              {}
            </code>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "{}",
            },
            "ref": null,
            "rendered": "{}",
            "type": "code",
          },
          "type": "pre",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Close code view",
          "className": "code-view__controls",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": "Close code view",
        "type": "div",
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "render": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "animate": "hide",
        "children": Array [
          <div
            className="code-view__content"
          >
            <pre>
              <code>
                {}
              </code>
            </pre>
          </div>,
          <div
            className="code-view__controls"
            onClick={[Function]}
          >
            Close code view
          </div>,
        ],
        "className": "code-view",
        "initial": "hide",
        "transition": Object {
          "duration": NaN,
          "ease": "easeInOut",
        },
        "variants": Object {
          "hide": Object {
            "opacity": 0,
            "translateY": "-100%",
          },
          "show": Object {
            "opacity": 1,
            "translateY": "0%",
          },
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <pre>
              <code>
                {}
              </code>
            </pre>,
            "className": "code-view__content",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <code>
                {}
              </code>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "{}",
              },
              "ref": null,
              "rendered": "{}",
              "type": "code",
            },
            "type": "pre",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Close code view",
            "className": "code-view__controls",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "Close code view",
          "type": "div",
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "render": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
}
`;

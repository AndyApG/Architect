// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<CodebookScreen /> can render 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CodebookScreen
    onComplete={[Function]}
    show={true}
    store={
      Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(observable): [Function],
      }
    }
    transitionState={null}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "buttons": Array [
        <Button
          color=""
          content=""
          disabled={false}
          icon=""
          iconPosition="right"
          onClick={[Function]}
          size=""
          type="button"
        >
          Continue
        </Button>,
      ],
      "children": <Layout
        className=""
      >
        <SectionsHeading
          location={null}
          meta={null}
        >
          Codebook
        </SectionsHeading>
        <Section
          className=""
          compactNext={false}
          contentId={null}
          disabled={false}
          group={false}
        >
          <Connect(Codebook) />
        </Section>
      </Layout>,
      "onAcknowledgeError": [Function],
      "show": true,
      "transitionState": null,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <SectionsHeading
            location={null}
            meta={null}
          >
            Codebook
          </SectionsHeading>,
          <Section
            className=""
            compactNext={false}
            contentId={null}
            disabled={false}
            group={false}
          >
            <Connect(Codebook) />
          </Section>,
        ],
        "className": "",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": "Codebook",
            "location": null,
            "meta": null,
          },
          "ref": null,
          "rendered": "Codebook",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <Connect(Codebook) />,
            "className": "",
            "compactNext": false,
            "contentId": null,
            "disabled": false,
            "group": false,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "buttons": Array [
          <Button
            color=""
            content=""
            disabled={false}
            icon=""
            iconPosition="right"
            onClick={[Function]}
            size=""
            type="button"
          >
            Continue
          </Button>,
        ],
        "children": <Layout
          className=""
        >
          <SectionsHeading
            location={null}
            meta={null}
          >
            Codebook
          </SectionsHeading>
          <Section
            className=""
            compactNext={false}
            contentId={null}
            disabled={false}
            group={false}
          >
            <Connect(Codebook) />
          </Section>
        </Layout>,
        "onAcknowledgeError": [Function],
        "show": true,
        "transitionState": null,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <SectionsHeading
              location={null}
              meta={null}
            >
              Codebook
            </SectionsHeading>,
            <Section
              className=""
              compactNext={false}
              contentId={null}
              disabled={false}
              group={false}
            >
              <Connect(Codebook) />
            </Section>,
          ],
          "className": "",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "Codebook",
              "location": null,
              "meta": null,
            },
            "ref": null,
            "rendered": "Codebook",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <Connect(Codebook) />,
              "className": "",
              "compactNext": false,
              "contentId": null,
              "disabled": false,
              "group": false,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;

// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Protocol /> can render 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Protocol
    exportProtocol={[Function]}
    hasChanges={false}
    hasUnsavedChanges={false}
    saveProtocol={[Function]}
    stages={
        Array [
            Object {
              "id": 1,
              "type": "Foo",
            },
          ]
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": null,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <withContext(Timeline)
          hasUnsavedChanges={false}
          onEditSkipLogic={[Function]}
          onEditStage={[Function]}
          onInsertStage={[Function]}
          stages={
                    Array [
                              Object {
                                "id": 1,
                                "type": "Foo",
                              },
                            ]
          }
/>,
        <div
          className="protocol__control-bar"
>
          <Button
                    color=""
                    content=""
                    icon=""
                    iconPosition="right"
                    onClick={[Function]}
                    size="small"
          >
                    Export
          </Button>
</div>,
        <Connect(NewStage)
          cancel={false}
          index={undefined}
          onCancel={[Function]}
          onComplete={[Function]}
          show={false}
/>,
        <Connect(Draft(EditSkipLogic))
          cancel={false}
          onCancel={[Function]}
          onComplete={[Function]}
          show={false}
          stageId={undefined}
/>,
        <Connect(Draft(EditStage))
          onCancel={[Function]}
          onComplete={[Function]}
          show={false}
          stageId={undefined}
/>,
      ],
      "className": "protocol",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": null,
        "nodeType": "class",
        "props": Object {
          "hasUnsavedChanges": false,
          "onEditSkipLogic": [Function],
          "onEditStage": [Function],
          "onInsertStage": [Function],
          "stages": Array [
            Object {
              "id": 1,
              "type": "Foo",
            },
          ],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Button
              color=""
              content=""
              icon=""
              iconPosition="right"
              onClick={[Function]}
              size="small"
>
              Export
</Button>,
            false,
          ],
          "className": "protocol__control-bar",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": null,
            "nodeType": "class",
            "props": Object {
              "children": "Export",
              "color": "",
              "content": "",
              "icon": "",
              "iconPosition": "right",
              "onClick": [Function],
              "size": "small",
            },
            "ref": null,
            "rendered": "Export",
            "type": [Function],
          },
          false,
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "class",
        "props": Object {
          "cancel": false,
          "index": undefined,
          "onCancel": [Function],
          "onComplete": [Function],
          "show": false,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "class",
        "props": Object {
          "cancel": false,
          "onCancel": [Function],
          "onComplete": [Function],
          "show": false,
          "stageId": undefined,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "class",
        "props": Object {
          "onCancel": [Function],
          "onComplete": [Function],
          "show": false,
          "stageId": undefined,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": null,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <withContext(Timeline)
            hasUnsavedChanges={false}
            onEditSkipLogic={[Function]}
            onEditStage={[Function]}
            onInsertStage={[Function]}
            stages={
                        Array [
                                    Object {
                                      "id": 1,
                                      "type": "Foo",
                                    },
                                  ]
            }
/>,
          <div
            className="protocol__control-bar"
>
            <Button
                        color=""
                        content=""
                        icon=""
                        iconPosition="right"
                        onClick={[Function]}
                        size="small"
            >
                        Export
            </Button>
</div>,
          <Connect(NewStage)
            cancel={false}
            index={undefined}
            onCancel={[Function]}
            onComplete={[Function]}
            show={false}
/>,
          <Connect(Draft(EditSkipLogic))
            cancel={false}
            onCancel={[Function]}
            onComplete={[Function]}
            show={false}
            stageId={undefined}
/>,
          <Connect(Draft(EditStage))
            onCancel={[Function]}
            onComplete={[Function]}
            show={false}
            stageId={undefined}
/>,
        ],
        "className": "protocol",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "hasUnsavedChanges": false,
            "onEditSkipLogic": [Function],
            "onEditStage": [Function],
            "onInsertStage": [Function],
            "stages": Array [
              Object {
                "id": 1,
                "type": "Foo",
              },
            ],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Button
                color=""
                content=""
                icon=""
                iconPosition="right"
                onClick={[Function]}
                size="small"
>
                Export
</Button>,
              false,
            ],
            "className": "protocol__control-bar",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": null,
              "nodeType": "class",
              "props": Object {
                "children": "Export",
                "color": "",
                "content": "",
                "icon": "",
                "iconPosition": "right",
                "onClick": [Function],
                "size": "small",
              },
              "ref": null,
              "rendered": "Export",
              "type": [Function],
            },
            false,
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "cancel": false,
            "index": undefined,
            "onCancel": [Function],
            "onComplete": [Function],
            "show": false,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "cancel": false,
            "onCancel": [Function],
            "onComplete": [Function],
            "show": false,
            "stageId": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "onCancel": [Function],
            "onComplete": [Function],
            "show": false,
            "stageId": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
